// function countInversions(i, j) {
//     var inversions = 0;
//     var tileNum = j * tileCount + i;
//     var lastTile = tileCount * tileCount;
//     var tileValue = boardParts[i][j].y * tileCount + boardParts[i][j].x;
//     for (var q = tileNum + 1; q < lastTile; ++q) {
//       var k = q % tileCount;
//       var l = Math.floor(q / tileCount);
  
//       var compValue = boardParts[k][l].y * tileCount + boardParts[k][l].x;
//       if (tileValue > compValue && tileValue != (lastTile - 1)) {
//         ++inversions;
//       }
//     }
//     return inversions;
// }
  
// function sumInversions() {
//     var inversions = 0;
//     for (var j = 0; j < tileCount; ++j) {
//       for (var i = 0; i < tileCount; ++i) {
//         inversions += countInversions(i, j);
//       }
//     }
//     return inversions;
// }
// function isSolvable() {
//     return (sumInversions() % 2 == 0)
//   }
// function shuffleArray(ar)
// {
//     var n = ar.length;
//     for(var i = 0; i < n; i++)
//     {
//         var i2 = getRandomIntInclusive(0, n - 1);
//         var t = ar[i];
//         ar[i] = ar[i2];
//         ar[i2] = t;        
//     }
// }
// function getRandomIntInclusive(min, max) 
// {
//     min = Math.ceil(min);
//     max = Math.floor(max);

//     return Math.floor(Math.random() * (max - min + 1)) + min;
// }
